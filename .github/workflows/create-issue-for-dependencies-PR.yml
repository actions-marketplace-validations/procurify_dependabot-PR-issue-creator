# This is a basic workflow to help you get started with Actions

name: Create Issue for Dependencies Pull Request

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ next ]
    types: [ review_requested ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: contains( github.event.pull_request.labels.*.name, 'ðŸ“¦ dependencies' )
    env: 
      CONFIG_FILE: .github/reviewers-info.json
      GITHUB_USERNAME: ${{ secrets.DEPENDABOT_GITHUB_USERNAME }}
      GITHUB_TOKEN: ${{ secrets.DEPENDABOT_GITHUB_TOKEN }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2
        
      - name: install requests
        run: pip install requests
        
      - name: Run Python Jira Script
        run: |
          python ./bin/create-issue-from-dependency-PR/create-jira-ticket.py -e $GITHUB_EVENT_PATH -u $JIRA_API_EMAIL -p $JIRA_API_TOKEN -config ${{ env.CONFIG_FILE }} -gu ${{ env.GITHUB_USERNAME }} -gp ${{ env.GITHUB_TOKEN }}
        env: 
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_API_EMAIL: ${{ secrets.JIRA_API_EMAIL }}

      - name: Run Python Linear Script
        run: |
          python ./bin/create-issue-from-dependency-PR/create-linear-issue-for-dependencies-pr.py -e $GITHUB_EVENT_PATH -p $LINEAR_API_TOKEN -config ${{ env.CONFIG_FILE }} -gu ${{ env.GITHUB_USERNAME }} -gp ${{ env.GITHUB_TOKEN }}
        env: 
          LINEAR_API_TOKEN: ${{ secrets.LINEAR_API_TOKEN }} 

      
